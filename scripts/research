#!/bin/bash

# Get user input using dmenu
search_query=$(echo "" | dmenu -p "Enter your search query:")

# Check if the user input is not empty
if [ -n "$search_query" ]; then
    # Define the search URLs for different websites
    scienceopen_url="https://www.scienceopen.com/search/$search_query#('v'~4_'id'~''_'queryType'~1_'context'~null_'kind'~77_'order'~0_'orderLowestFirst'~false_'query'~'$search_query'_'filters'~!('kind'~86_'not'~false_'offset'~1_'timeUnit'~5)*_'hideOthers'~false)"
    base_search_url="https://www.base-search.net/Search/Results?q=$search_query"
    doaj_url="https://doaj.org/search/articles?ref=homepage-box&source=%7B%22query%22%3A%7B%22query_string%22%3A%7B%22query%22%3A%22$search_query%22%2C%22default_operator%22%3A%22AND%22%7D%7D%7D"
    arxiv_url="https://arxiv.org/search/?query=$search_query&searchtype=all&abstracts=show&order=-announced_date_first&size=50"

    # Array to hold the URLs and their corresponding names
    websites=("ScienceOpen" "BASE Search" "DOAJ" "arXiv")
    urls=("$scienceopen_url" "$base_search_url" "$doaj_url" "$arxiv_url")

    # Get the subcommand if provided
    subcommand="$1"

    # Check if the subcommand is for searching on all platforms
    if [ "$subcommand" = "-a" ]; then
        for url in "${urls[@]}"; do
            xdg-open "$url"
        done
    else
        # Loop through the websites array and display options using dmenu
        chosen_website=$(printf '%s\n' "${websites[@]}" | dmenu -p "Select a website:")

        # Get the corresponding URL for the chosen website
        chosen_url=""
        for ((i=0; i<${#websites[@]}; i++)); do
            if [ "${websites[i]}" = "$chosen_website" ]; then
                chosen_url="${urls[i]}"
                break
            fi
        done

        # Open the chosen URL in a web browser
        if [ -n "$chosen_url" ]; then
            xdg-open "$chosen_url"
        fi
    fi
fi

